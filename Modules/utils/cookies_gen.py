from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
import os
import time

def generate_dynamic_cookie(user_id: int) -> str:
    """
    Generate a YouTube cookie automatically.
    Returns a string containing the cookie in Netscape format.
    """

    # Configure Chrome options
    options = Options()
    options.add_argument("--headless")  # run headless on Heroku/VPS
    options.add_argument("--no-sandbox")
    options.add_argument("--disable-dev-shm-usage")
    options.add_argument("--disable-gpu")
    options.add_argument("--disable-infobars")
    options.add_argument("--remote-debugging-port=9222")
    options.add_argument("--window-size=1280,800")
    
    # Optional: user-agent to mimic a mobile browser
    options.add_argument(
        "user-agent=Mozilla/5.0 (iPhone; CPU iPhone OS 10_3 like Mac OS X) "
        "AppleWebKit/602.1.50 (KHTML, like Gecko) CriOS/56.0.2924.75 Mobile/14E5239e Safari/602.1"
    )

    # Start Chrome driver
    driver = webdriver.Chrome(options=options)

    try:
        # Navigate to YouTube
        driver.get("https://www.youtube.com")

        # Wait for cookies/login to load
        time.sleep(5)  # adjust if needed for Heroku VPS latency

        # Get cookies
        cookies = driver.get_cookies()

        # Convert cookies to Netscape HTTP format
        cookie_lines = ["# Netscape HTTP Cookie File\n# Generated by @TNCnetwork\n\n"]
        for cookie in cookies:
            expiry = cookie.get("expiry") or cookie.get("expires") or 0
            line = "\t".join([
                cookie.get("domain", ""),
                "TRUE",  # include subdomains
                cookie.get("path", "/"),
                "TRUE" if cookie.get("secure") else "FALSE",
                str(int(expiry)),
                cookie.get("name", ""),
                cookie.get("value", ""),
            ])
            cookie_lines.append(line + "\n")

        cookie_str = "".join(cookie_lines)
        return cookie_str

    finally:
        driver.quit()
