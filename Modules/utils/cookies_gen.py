# Modules/utils/cookies_gen.py
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
import os
import tempfile

def generate_dynamic_cookie():
    """Generate a temporary YouTube cookies file using headless Chrome."""
    
    chrome_options = Options()
    chrome_options.add_argument("--headless")
    chrome_options.add_argument("--no-sandbox")
    chrome_options.add_argument("--disable-dev-shm-usage")
    chrome_options.add_argument("--disable-gpu")
    chrome_options.add_argument("--window-size=1920,1080")
    chrome_options.add_argument(f"user-agent=Mozilla/5.0 (iPhone; CPU iPhone OS 10_3 like Mac OS X) AppleWebKit/602.1.50 (KHTML, like Gecko) CriOS/56.0.2924.75 Mobile/14E5239e Safari/602.1")
    chrome_options.binary_location = os.environ.get("GOOGLE_CHROME_BIN")  # Required on Heroku

    driver = webdriver.Chrome(executable_path=os.environ.get("CHROMEDRIVER_PATH"), options=chrome_options)
    driver.get("https://www.youtube.com")

    # Let the user manually log in if needed, or use a default cookie
    # For demo, we will just grab the default cookies after visiting YouTube
    cookies = driver.get_cookies()

    # Save cookies to a temporary .txt file
    tmp_file = tempfile.NamedTemporaryFile(delete=False, suffix=".txt")
    with open(tmp_file.name, "w") as f:
        f.write("# Netscape HTTP Cookie File\n")
        f.write("# Generated by @TNCnetwork\n\n")
        for c in cookies:
            expiry = c.get("expiry", 0)
            f.write(f"{c['domain']}\tTRUE\t{c['path']}\t{'TRUE' if c.get('secure') else 'FALSE'}\t{expiry}\t{c['name']}\t{c['value']}\n")

    driver.quit()
    return tmp_file.name
